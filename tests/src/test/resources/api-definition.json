{
  "openapi": "3.0.0",
  "paths": {
    "/order": {
      "post": {
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Create a new Order",
        "requestBody": {
          "$ref": "#/components/requestBodies/Order"
        },
        "responses": {
          "201": {
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "The content type of the body.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Created. Successful response with the newly created object as entity\nin the body. Location header contains URL of newly created entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid request or validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The entity of the request was in a not\nsupported format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "pizzashack_auth": []
          }
        ]
      }
    },
    "/menu": {
      "get": {
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Return a list of available menu items",
        "responses": {
          "200": {
            "headers": {},
            "description": "OK. List of APIs is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  },
                  "type": "array"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified. Empty body because the client has already the latest\nversion of the requested resource."
          },
          "406": {
            "description": "Not Acceptable. The requested media type is not supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "pizzashack_auth": []
          }
        ]
      }
    },
    "/basic-menu": {
      "get": {
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Return a list of available menu items",
        "responses": {
          "200": {
            "headers": {},
            "description": "OK. List of APIs is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  },
                  "type": "array"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified. Empty body because the client has already the latest\nversion of the requested resource."
          },
          "406": {
            "description": "Not Acceptable. The requested media type is not supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "pizzashack_basic": []
          }
        ]
      }
    },
    "/noauth": {
      "get": {
        "x-auth-type": "None",
        "x-throttling-tier": "Unlimited",
        "description": "Return a list of available menu items",
        "responses": {
          "200": {
            "headers": {},
            "description": "OK. List of APIs is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MenuItem"
                  },
                  "type": "array"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified. Empty body because the client has already the latest\nversion of the requested resource."
          },
          "406": {
            "description": "Not Acceptable. The requested media type is not supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/order/{orderId}": {
      "put": {
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Update an existing Order",
        "parameters": [
          {
            "description": "Order Id",
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Order"
        },
        "responses": {
          "200": {
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Type": {
                "description": "The content type of the body.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK. Successful response with updated Order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid request or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The resource to be updated does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed. The request has not been performed because one\nof the preconditions is not met.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "pizzashack_auth": [
              "write:order",
              "read:order"
            ]
          }
        ]
      },
      "get": {
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Get details of an Order",
        "parameters": [
          {
            "description": "Order Id",
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {},
            "description": "OK Requested Order will be returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified. Empty body because the client has already the latest\nversion of the requested resource."
          },
          "404": {
            "description": "Not Found. Requested API does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The requested media type is not supported",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "pizzashack_auth": [
              "write:order",
              "read:order"
            ]
          }
        ]
      },
      "delete": {
        "x-auth-type": "Application & Application User",
        "x-throttling-tier": "Unlimited",
        "description": "Delete an existing Order",
        "parameters": [
          {
            "description": "Order Id",
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Resource successfully deleted."
          },
          "404": {
            "description": "Not Found. Resource to be deleted does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed. The request has not been performed because one\nof the preconditions is not met.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "pizzashack_auth": [
              "write:order",
              "read:order"
            ]
          }
        ]
      }
    }
  },
  "x-mgw-throttling-tier": "10MinAppPolicy",
  "info": {
    "title": "PizzaShackAPI",
    "description": "This is a RESTFul API for Pizza Shack online pizza delivery store.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "email": "architecture@pizzashack.com",
      "name": "John Doe",
      "url": "http://www.pizzashack.com"
    },
    "version": "1.0.0"
  },
  "components": {
    "requestBodies": {
      "Order": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        },
        "description": "Order object that needs to be added",
        "required": true
      }
    },
    "securitySchemes": {
      "pizzashack_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://wso2.swagger.io/api/oauth/dialog",
            "scopes": {
              "write:order": "modify order in your account",
              "read:order": "read your order",
              "read:menu": "read your menu"
            }
          }
        }
      },
      "pizzashack_basic": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "ErrorListItem": {
        "title": "Description of individual errors that may have occored during a request.",
        "properties": {
          "message": {
            "description": "Description about individual errors occored",
            "type": "string"
          },
          "code": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "MenuItem": {
        "title": "Pizza menu Item",
        "properties": {
          "price": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Order": {
        "title": "Pizza Order",
        "properties": {
          "customerName": {
            "type": "string"
          },
          "delivered": {
            "type": "boolean"
          },
          "address": {
            "type": "string"
          },
          "pizzaType": {
            "type": "string"
          },
          "creditCardNumber": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "orderId": {
            "type": "string"
          }
        },
        "required": [
          "orderId"
        ]
      },
      "Error": {
        "title": "Error object returned with 4XX HTTP status",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "error": {
            "items": {
              "$ref": "#/components/schemas/ErrorListItem"
            },
            "description": "If there are more than one error list them out. Ex. list out\nvalidation errors by each field.",
            "type": "array"
          },
          "description": {
            "description": "A detail description about the error message.",
            "type": "string"
          },
          "code": {
            "format": "int64",
            "type": "integer"
          },
          "moreInfo": {
            "description": "Preferably an url with more details about the error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    }
  }
}